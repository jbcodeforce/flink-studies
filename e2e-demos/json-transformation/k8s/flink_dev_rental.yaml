apiVersion: platform.confluent.io/v1beta1
kind: FlinkEnvironment
metadata:
  name: dev-rental
  namespace: confluent
spec:
  kubernetesNamespace: rental
  flinkApplicationDefaults: 
    metadata:
      labels:
        env: dev-rental
    spec:
      flinkConfiguration:
        taskmanager.numberOfTaskSlots: '1'
        rest.profiling.enabled": "true"
        state.backend.type: rocksdb
        state.checkpoints.dir: 's3a://flink/checkpoints'
        state.savepoints.dir: 's3a://flink/savepoints'
        state.backend.incremental: 'true'
        state.backend.rocksdb.use-bloom-filter: 'true'
        state.checkpoints.num-retained: '3'
        state.savepoints.num-retained: '3'
        state.backend.rocksdb.block-cache-size: '1024m'
        state.backend.rocksdb.block-size: '1024m'
        state.backend.rocksdb.block-size-multiplier: '10'
        # S3/MinIO Configuration - using environment variables from secret
        s3.endpoint: '${S3_ENDPOINT}'
        s3.path.style.access: 'true'
        s3.access-key: '${S3_ACCESS_KEY}'
        s3.secret-key: '${S3_SECRET_KEY}'
      podTemplate:
        metadata:
          name: flink-pod-template
        spec:
          containers:
          - name: flink-main-container
            env:
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: minio-s3-credentials
                  key: s3.endpoint
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-s3-credentials
                  key: s3.access-key
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-s3-credentials
                  key: s3.secret-key
  cmfRestClassRef:
    name: default
    namespace: confluent
package rental.demo.table;

public class EventModels {
    public static final String CREATE_RAW_JOB_TABLE = String.join("\n",
        "CREATE TABLE raw_jobs (",
        "    job_id BIGINT,",
        "    job_type STRING,",
        "    job_status STRING,",
        "    rate_service_provider STRING,",
        "    total_paid DECIMAL(10,2),",
        "    job_date_start STRING,",
        "    job_completed_date STRING,",
        "    job_entered_date STRING,",
        "    job_last_modified_date STRING,",
        "    service_provider_name STRING",
        ") WITH (",
        "    'connector' = 'kafka',",
        "    'topic' = '%s',",
        "    'properties.bootstrap.servers' = '%s',",
        "    'properties.group.id' = '%s',",
        "    'scan.startup.mode' = 'earliest-offset',",
        "    'format' = 'json',",
        "    'json.fail-on-missing-field' = 'false',",
        "    'json.ignore-parse-errors' = 'true'",
        ");"
    );

    
    public static final String CREATE_RAW_ORDER_TABLE = String.join("\n",
        "CREATE TABLE raw_orders (",
        "    OrderId BIGINT,",
        "    Status STRING,",
        "    Equipment ARRAY<ROW<",
        "        ModelCode STRING,",
        "        Rate STRING",
        "    >>,",
        "    TotalPaid DECIMAL(10,2),",
        "    Type STRING,",
        "    Coverage ROW<",
        "        details STRING",
        "    >,",
        "    Itinerary ROW<",
        "        PickupDate TIMESTAMP(3),",
        "        DropoffDate TIMESTAMP(3),",
        "        PickupLocation STRING,",
        "        DropoffLocation STRING",
        "    >,",
        "    OrderType STRING,",
        "    AssociatedContractId STRING",
        ") WITH (",
        "    'connector' = 'kafka',",
        "    'topic' = '%s',",
        "    'properties.bootstrap.servers' = '%s',",
        "    'properties.group.id' = '%s',",
        "    'scan.startup.mode' = 'earliest-offset',",
        "    'format' = 'json',",
        "    'json.fail-on-missing-field' = 'false',",
        "    'json.ignore-parse-errors' = 'true'",
        ");"
    );
    public static final String CREATE_ORDER_DETAILS_TABLE = String.join("\n",
        "CREATE TABLE order_details (", 
        "    OrderId BIGINT NOT NULL PRIMARY KEY NOT ENFORCED,",
        "    EquipmentRentalDetails ARRAY<ROW<",
        "        OrderId BIGINT,",
        "        Status STRING,",
        "        Equipment ARRAY<ROW<",
        "            ModelCode STRING,",
        "            Rate STRING",
        "        >>,",
        "        TotalPaid DECIMAL(10,2),",
        "        Type STRING,",
        "        Coverage STRING,",
        "        Itinerary ROW<",
        "            PickupDate TIMESTAMP(3),",
        "            DropoffDate TIMESTAMP(3),",
        "            PickupLocation STRING,",
        "            DropoffLocation STRING",
        "        >>,",
        "        OrderType STRING,",
        "        AssociatedContractId BIGINT",
        "    >>,",
        "    MovingHelpDetails ARRAY<ROW<",
        "        job_id BIGINT,",
        "        job_type STRING,",
        "        job_status STRING,",
        "        rate_service_provider STRING,",
        "        total_paid DECIMAL(10,2),",
        "        job_date_start STRING,",
        "        job_completed_date STRING,",
        "        job_entered_date STRING,",
        "        job_last_modified_date STRING,",
        "        service_provider_name STRING",
        "    >>",
        ") WITH (",
        "    'connector' = 'kafka',",
        "    'topic' = '%s',",
        "    'properties.bootstrap.servers' = '%s',",
        "    'properties.group.id' = '%s',",
        "    'key.format' = 'json',",
        "    'value.format' = 'json'",
        ");"
    );
}

apiVersion: v1
kind: Pod
metadata:
  name: producer-api
  namespace: confluent
  labels:
    app: producer-api
    component: api-server
    service: kafka-producer
spec:
  restartPolicy: Always
  containers:
  - name: api-server
    image: jbcodeforce/orders-producer:latest
    imagePullPolicy: IfNotPresent
    command: ["python", "api_server.py"]
    ports:
    - containerPort: 8000
      name: http
      protocol: TCP
    envFrom:
    - configMapRef:
        name: kafka-client-config
    env:
    - name: PORT
      value: "8000"
    resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"
    livenessProbe:
      httpGet:
        path: /health
        port: 8000
      initialDelaySeconds: 30
      periodSeconds: 30
      timeoutSeconds: 10
      failureThreshold: 3
    readinessProbe:
      httpGet:
        path: /health
        port: 8000
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
---
# Internal ClusterIP Service for ingress and internal access
apiVersion: v1
kind: Service
metadata:
  name: producer-api-service
  namespace: confluent
  labels:
    app: producer-api
    component: api-server
spec:
  selector:
    app: producer-api
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
# NodePort Service for direct localhost access
apiVersion: v1
kind: Service
metadata:
  name: producer-api-nodeport
  namespace: confluent
  labels:
    app: producer-api
    component: api-server
    access: external
spec:
  selector:
    app: producer-api
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    nodePort: 30080
    protocol: TCP
  type: NodePort
---
# Optional: Ingress for external access
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: producer-api-ingress
  namespace: confluent
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
spec:
  ingressClassName: nginx
  rules:
  - host: producer-api.local  # Update this to your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: producer-api-service
            port:
              number: 80

apiVersion: apps/v1
kind: Deployment
metadata:
  name: claimdb-api
  namespace: el-demo
  labels:
    app: external-lookup
    component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: external-lookup
      component: api
  template:
    metadata:
      labels:
        app: external-lookup
        component: api
    spec:
      initContainers:
      - name: init-db
        image: postgres:16-alpine
        command:
        - /bin/sh
        - -c
        - |
          echo "Initializing database schema..."
          PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -f /sql/01_create_schema.sql
          echo "Inserting test data..."
          PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -f /sql/02_insert_data.sql
          echo "Database initialization complete"
        envFrom:
        - configMapRef:
            name: claimdb-config
        - secretRef:
            name: claimdb-secret
        volumeMounts:
        - name: sql-scripts
          mountPath: /sql
      containers:
      - name: claimdb-api
        image: demo-claimdb:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        envFrom:
        - configMapRef:
            name: claimdb-config
        - secretRef:
            name: claimdb-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      - name: sql-scripts
        configMap:
          name: claimdb-sql-scripts
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534  # nobody user
        runAsGroup: 65534
        fsGroup: 65534
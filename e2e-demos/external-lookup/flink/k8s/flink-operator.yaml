# Alternative deployment using Flink Kubernetes Operator
# This requires the Flink Kubernetes Operator to be installed first
# Install with: kubectl apply -f https://github.com/apache/flink-kubernetes-operator/releases/latest/download/flink-kubernetes-operator.yaml

apiVersion: confluent.io/v1beta1
kind: FlinkDeployment
metadata:
  name: payment-claims-enrichment
  namespace: flink
  labels:
    app: payment-claims-enrichment
    component: flink-operator-deployment
spec:
  image: apache/flink:1.20.0-scala_2.12-java11
  flinkVersion: v1_20
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "2"
    execution.checkpointing.interval: 60s
    execution.checkpointing.mode: EXACTLY_ONCE
    state.backend: rocksdb
    state.checkpoints.dir: "file:///opt/flink/checkpoints"
    state.savepoints.dir: "file:///opt/flink/savepoints"
    restart-strategy: failure-rate
    restart-strategy.failure-rate.max-failures-per-interval: "3"
    restart-strategy.failure-rate.failure-rate-interval: "5 min"
    restart-strategy.failure-rate.delay: "10 s"
    
  serviceAccount: flink-service-account
  
  jobManager:
    resource:
      memory: "1600m"
      cpu: 0.5
    replicas: 1
    
  taskManager:
    resource:
      memory: "1728m"
      cpu: 0.5
    replicas: 2
    
  podTemplate:
    spec:
      containers:
      - name: flink-main-container
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            configMapKeyRef:
              name: payment-claims-enrichment-config
              key: kafka.bootstrap.servers
        - name: DUCKDB_URL
          valueFrom:
            configMapKeyRef:
              name: payment-claims-enrichment-config
              key: duckdb.url
        - name: PAYMENT_EVENTS_TOPIC
          valueFrom:
            configMapKeyRef:
              name: payment-claims-enrichment-config
              key: kafka.payment.events.topic
        - name: ENRICHED_PAYMENTS_TOPIC
          valueFrom:
            configMapKeyRef:
              name: payment-claims-enrichment-config
              key: kafka.enriched.payments.topic
        - name: FAILED_PAYMENTS_TOPIC
          valueFrom:
            configMapKeyRef:
              name: payment-claims-enrichment-config
              key: kafka.failed.payments.topic
        volumeMounts:
        - name: checkpoints
          mountPath: /opt/flink/checkpoints
        - name: savepoints
          mountPath: /opt/flink/savepoints
        - name: app-jar
          mountPath: /opt/flink/usrlib
      volumes:
      - name: checkpoints
        persistentVolumeClaim:
          claimName: flink-checkpoints
      - name: savepoints
        persistentVolumeClaim:
          claimName: flink-savepoints
      - name: app-jar
        emptyDir: {}
      initContainers:
      - name: jar-downloader
        image: curlimages/curl:8.5.0
        command:
        - sh
        - -c
        - |
          echo "Downloading application JAR..."
          # Replace with your actual JAR download logic
          touch /opt/flink/usrlib/payment-claims-enrichment-1.0-SNAPSHOT.jar
        volumeMounts:
        - name: app-jar
          mountPath: /opt/flink/usrlib
  
  job:
    jarURI: local:///opt/flink/usrlib/payment-claims-enrichment-1.0-SNAPSHOT.jar
    entryClass: com.example.PaymentClaimsEnrichment
    parallelism: 2
    upgradeMode: stateless
    state: running
    
  # Ingress for Flink Web UI when using operator
  ingress:
    template: |
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: payment-claims-enrichment-ingress
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
      spec:
        rules:
        - host: flink-operator.external-lookup.local
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: payment-claims-enrichment-rest
                  port:
                    number: 8081

---
# SessionCluster alternative for development/testing
apiVersion: flink.apache.org/v1beta1
kind: FlinkSessionJob
metadata:
  name: payment-claims-enrichment-session-job
  namespace: flink
  labels:
    app: payment-claims-enrichment
    component: session-job
spec:
  deploymentName: payment-claims-enrichment-session
  job:
    jarURI: local:///opt/flink/usrlib/payment-claims-enrichment-1.0-SNAPSHOT.jar
    entryClass: com.example.PaymentClaimsEnrichment
    parallelism: 2
    upgradeMode: savepoint
    state: running
    savepointTriggerNonce: 0

---
apiVersion: flink.apache.org/v1beta1
kind: FlinkDeployment
metadata:
  name: payment-claims-enrichment-session
  namespace: flink
  labels:
    app: payment-claims-enrichment
    component: session-cluster
spec:
  image: apache/flink:1.20.0-scala_2.12-java11
  flinkVersion: v1_20
  flinkConfiguration:
    taskmanager.numberOfTaskSlots: "2"
    execution.checkpointing.interval: 60s
  serviceAccount: flink-service-account
  
  jobManager:
    resource:
      memory: "1600m"
      cpu: 0.5
    replicas: 1
    
  taskManager:
    resource:
      memory: "1728m" 
      cpu: 0.5
    replicas: 2
    
  # Session mode - no job specified
  mode: SessionMode

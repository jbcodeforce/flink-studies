apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: el-demo
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s

    rule_files:
      - "flink_rules.yml"
      - "kafka_rules.yml"

    scrape_configs:
      # Flink JobManager metrics
      - job_name: 'flink-jobmanager'
        static_configs:
          - targets: ['flink-jobmanager:8081']
        metrics_path: /metrics
        scrape_interval: 15s

      # Flink TaskManager metrics
      - job_name: 'flink-taskmanager'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - el-demo
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_component]
            action: keep
            regex: taskmanager
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      # DuckDB ClaimDB API metrics
      - job_name: 'claimdb'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - el-demo  
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: duckdb-external-lookup
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      # Kafka metrics from Confluent Platform
      - job_name: 'kafka'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - confluent
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: kafka
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      # Kubernetes cAdvisor metrics for container metrics
      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      # Kubernetes API server metrics
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Event Generator metrics (if it exposes any)
      - job_name: 'event-generator'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - el-demo
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: event-generator
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

  flink_rules.yml: |
    groups:
    - name: flink.rules
      rules:
      - alert: FlinkJobDown
        expr: up{job=~"flink-.*"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Flink job {{ $labels.job }} is down"
          description: "Flink job {{ $labels.job }} has been down for more than 1 minute."

      - alert: FlinkHighLatency
        expr: flink_taskmanager_job_task_operator_latency > 5000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High latency in Flink job {{ $labels.job_name }}"
          description: "Latency is {{ $value }}ms for operator {{ $labels.operator_name }}"

      - alert: FlinkLowThroughput
        expr: rate(flink_jobmanager_job_numRecordsInPerSecond[5m]) < 1
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Low throughput in Flink job {{ $labels.job_name }}"
          description: "Throughput is {{ $value }} records/sec"

  kafka_rules.yml: |
    groups:
    - name: kafka.rules
      rules:
      - alert: KafkaConsumerLag
        expr: kafka_consumer_lag_sum > 1000
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High consumer lag for {{ $labels.consumer_group }}"
          description: "Consumer lag is {{ $value }} for topic {{ $labels.topic }}"

      - alert: KafkaTopicPartitionOffline
        expr: kafka_cluster_partition_offline > 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Kafka partition offline"
          description: "{{ $value }} partitions are offline"
